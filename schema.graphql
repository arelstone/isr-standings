# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Result {
  id: ID!
  player: String!
  points: Float!
  polePosition: Boolean!
  fastestLap: Boolean!
  bestTime: String
  totalTime: String
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Track {
  id: ID!
  name: String!
  description: String
  game: String!
  country: String
  dlc: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type Race {
  id: ID!
  description: String
  startingAt: DateTime!

  """Minutes"""
  raceDuration: Float

  """Minutes"""
  qualifyingDuration: Float
  carCategory: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  track: Track!
  season: Season!
  results: [Result!]!
}

type User {
  id: Float!
  email: String!
}

type Season {
  id: ID!
  name: String!
  game: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  races: [Race!]!
}

type CreateSeasonPayload {
  id: Float!
  name: String!
  game: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Calendar {
  id: ID!

  """Starting at Monday"""
  dayOfWeek: Float!
  host: String!
  time: String!
  timezone: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  game: String!
  next: String!
  day: String!
}

type JwtPayload {
  token: String!
  user: User!
}

type Query {
  seasons(game: String): [Season!]!
  season(id: Float!): Season!
  tracks(game: String!): [Track!]!
  calendar: [Calendar!]!
  me: User!
  login(input: LoginInput!): JwtPayload!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createSeason(input: CreateSeasonInput!): CreateSeasonPayload!
  updateSeason(input: UpdateSeasonInput!, id: Float!): Season!
  deleteSeason(id: Float!): Season!
  createTrack(input: CreateTrackInput!): Track!
  deleteTrack(id: Float!): Track!
  updateTrack(input: UpdateTrackInput!, id: Float!): Track!
  createRace(input: CreateRaceInput!): Race!
  updateRace(input: UpdateRaceInput!): Race!
  createResult(input: CreateResultInput!, raceId: Float!): Race!
  updateResult(input: UpdateResultInput!, id: Float!): Race!
  createCalendar(input: CreateCalendarInput!): [Calendar!]!
  signup(input: SignupInput!): JwtPayload!
}

input CreateSeasonInput {
  name: String!
  description: String!
  game: String!
}

input UpdateSeasonInput {
  name: String
  description: String
}

input CreateTrackInput {
  name: String!
  description: String
  game: String = "gts"
  country: String
  dlc: Boolean = false
}

input UpdateTrackInput {
  name: String
  description: String
  game: String = "gts"
  country: String
  dlc: Boolean = false
}

input CreateRaceInput {
  description: String!
  startingAt: DateTime!
  raceDuration: Float!
  qualifyingDuration: Float!
  seasonId: Float!
  trackId: Float!
  carCatrgory: String = "gt3"
}

input UpdateRaceInput {
  description: String!
  startingAt: DateTime!
  raceDuration: Float!
  qualifyingDuration: Float!
  trackId: String!
  carCatrgory: String!
}

input CreateResultInput {
  player: String!
  points: Float!
  polePosition: Boolean = false
  fastestLap: Boolean = false
  bestTime: String
  totalTime: String
}

input UpdateResultInput {
  player: String
  points: Float
  polePosition: Boolean
  fastestLap: Boolean
  bestTime: String
  totalTime: String
}

input CreateCalendarInput {
  dayOfWeek: Float!
  host: String!
  time: String!
  timezone: String!
  game: String = "gts"
}

input SignupInput {
  email: String!
  password: String!
}
